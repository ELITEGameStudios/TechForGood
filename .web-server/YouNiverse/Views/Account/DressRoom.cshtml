@using System.Drawing
@model DressRoomViewModel;

@{
	ViewData["Title"] = "Dress Room";
	string[] colors = new string[]{
"purple",
"pink",
"red",
"orange",
"yellow",
"green",
"blue",
};
}

<link rel="stylesheet" href="~/css/dressroom.css" />

<div class="parent">
	<div class="inner-container">
		<div class="tab-container">
			@foreach (EItemSlot slot in ((EItemSlot[])Enum.GetValues(typeof(EItemSlot))).Reverse())
			{
				<input class="tab" type="radio" id="@slot.ToString()" name="new-tabs"
					onchange="onTabChange('tab-content-@(slot)', this)" @((int)slot == 0 ? "checked" : "")>
				<label class="tab border-@(colors[(int)slot]) @((int)slot == 0 ? "tab-first" : "")"
					for="@slot.ToString()"><span>@EnumHelpers.GetDisplayName(@slot)</span></label>
			}
		</div>

		<div class="tab-content-container">
			@foreach (EItemSlot slot in Enum.GetValues(typeof(EItemSlot)))
			{
				<div class="tab-content border-@(colors[(int)slot])" id="tab-content-@(slot)"></div>
			}

			@foreach (EItemSlot slot in Enum.GetValues(typeof(EItemSlot)))
			{
				<div class="item-slot-display @(slot == EItemSlot.Base ? "item-slot-base" : "")"
					id="slot-@Enum.GetName(typeof(EItemSlot), slot)">
				</div>
			}
			<div class="item-slot-display" id="slot-Eyes"></div>
		</div>
	</div>
</div>

<script>
	window.onload = () => {
		let buttons = document.getElementsByClassName("item-button");
		Array.from(buttons).forEach((button) => {
			if (button.checked) {
				button.onclick();
			}
		});

		let checked = document.querySelector("input.tab[type=\"radio\"]:checked");
		console.log(checked);
		checked.onchange();

		updateSkinColor();
	}

	function updateDisplay(displayId, itemValue) {
		let div = document.getElementById(displayId);
		div.style.backgroundImage = `url("/items/${itemValue}.png")`;
	}

	function updateSkinColor() {
		let color = document.getElementById("skin-color-picker").value;

		let bases = document.getElementsByClassName("item-slot-base");
		Array.from(bases).forEach((base) => {
			base.style.backgroundColor = color;
		});
	}

	function onTabChange(slotId, radio) {
		let tabs = document.getElementsByClassName("tab-content");
		Array.from(tabs).forEach(tab => {
			tab.classList.remove("selected");
		});

		console.log(slotId);
		let content = document.getElementById(slotId);
		content.classList.add("selected");
	}
</script>